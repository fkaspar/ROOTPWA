language: cpp

compiler:
    - clang
    - gcc

env:
    matrix:
        - ROOT_VER='6.02.08' GCC_VER='4.8'
        - ROOT_VER='5.34.30' GCC_VER='4.6'
        - ROOT_VER='5.34.30' GCC_VER='4.8'

matrix:
    exclude:
        - env: ROOT_VER='6.02.08'

before_install:
    - sudo apt-get update -qq
    - sudo apt-get install -y git dpkg-dev make g++ gcc binutils libx11-dev libxpm-dev libxft-dev libxext-dev
    - sudo apt-get install -y gfortran libssl-dev libpcre3-dev xlibmesa-glu-dev libglew1.5-dev libftgl-dev libmysqlclient-dev libfftw3-dev cfitsio-dev graphviz-dev libavahi-compat-libdnssd-dev libldap2-dev python-dev libxml2-dev libkrb5-dev libgsl0-dev libqt4-dev
    - ./travisCI/install-gcc4.8.sh
    - if [ "$GCC_VER" = "4.8" ]; then ./travisCI/set-gcc4.8.sh; fi
    
    - ./travisCI/install-cmake.sh
    - export PATH=$PWD/cmake/bin:${PATH}
    - ./travisCI/install-boost.sh
    - export BOOST_ROOT=$PWD/boost_1_58_0
    - ./travisCI/install-libconfig.sh
    - export LIBCONFIG=$PWD/libconfig_install
    - export LD_LIBRARY_PATH=${LIBCONFIG}/lib:${LD_LIBRARY_PATH}
    - ./travisCI/install-yaml-cpp.sh
    - export YAML_CPP=$PWD/yaml-cpp-install
    - export LD_LIBRARY_PATH=${YAML_CPP}/lib:${LD_LIBRARY_PATH}
    - ./travisCI/install-nlopt.sh
    - export NLOPT=$PWD/nlopt-build
    - ./travisCI/install-root.sh
    - . ./root-$ROOT_VER/bin/thisroot.sh
    - export ROOTPWA=$PWD
    - export PYTHONPATH=${ROOTSYS}/lib:${PYTHONPATH}
install:
    - cd ${ROOTPWA}/build
    - cmake ..
    - make
before_script: 
    - echo "before_script"
    - export PYTHONPATH=${ROOTPWA}/build/pyLib:${PYTHONPATH}
    - echo $PYTHONPATH
    - echo $ROOTSYS
    - ls ${ROOTPWA}/build/pyLib
    - export PATH=${ROOTPWA}/build/bin:${PATH}
    - export LD_LIBRARY_PATH=${ROOTPWA}/build/lib:${LD_LIBRARY_PATH}
script:
    - echo "script"
    - cd ${ROOTPWA}/pyInterface
    - python ./testPyRootPwa.py

cache: apt
#notifications:
#    email:
#        recipients: rootpwa-push-notifications@lists.sourceforge.net
#        on_success: change
#        on_failure: always
